<div style="margin-top: 1.5rem; background: rgba(255,255,255,0.2); padding: 1rem; border-radius: 8px;">
                            <strong>Pro Tip:</strong> Always verify AI-generated editorial images don't accidentally recreate copyrighted content.
                        </div>
                    </div>

                    <div style="background: linear-gradient(135deg, #8b5cf6, #7c3aed); color: var(--white); padding: 2rem; border-radius: 15px; transition: transform 0.3s ease;" onmouseover="this.style.transform='translateY(-5px)'" onmouseout="this.style.transform='translateY(0)'">
                        <h3>üé® Creative Projects</h3>
                        <div style="margin-top: 1rem; font-size: 0.9rem; line-height: 1.8;">
                            <strong>1.</strong> Ideation and concepts<br>
                            <strong>2.</strong> Style exploration<br>
                            <strong>3.</strong> Iteration and refinement<br>
                            <strong>4.</strong> Post-processing enhancement<br>
                            <strong>5.</strong> Final production
                        </div>
                        <div style="margin-top: 1.5rem; background: rgba(255,255,255,0.2); padding: 1rem; border-radius: 8px;">
                            <strong>Pro Tip:</strong> Use Midjourney for initial concepts, then refine with more specific tools for final production.
                        </div>
                    </div>
                </div>

                <div style="margin-top: 3rem; background: var(--gray-50); border-radius: 15px; padding: 2rem; border: 2px solid var(--silver-light);">
                    <h3 style="color: var(--cobalt-blue); margin-bottom: 1.5rem; text-align: center;">‚ö° Quick Start Templates</h3>
                    <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 1rem;">
                        <button onclick="loadWorkflowTemplate('social')" style="background: var(--white); border: 2px solid var(--cobalt-blue); color: var(--cobalt-blue); padding: 1rem; border-radius: 10px; cursor: pointer; transition: all 0.3s ease; font-weight: 600;">üì± Social Media Template</button>
                        <button onclick="loadWorkflowTemplate('product')" style="background: var(--white); border: 2px solid var(--success); color: var(--success); padding: 1rem; border-radius: 10px; cursor: pointer; transition: all 0.3s ease; font-weight: 600;">üõçÔ∏è Product Photo Template</button>
                        <button onclick="loadWorkflowTemplate('portrait')" style="background: var(--white); border: 2px solid var(--warning); color: var(--warning); padding: 1rem; border-radius: 10px; cursor: pointer; transition: all 0.3s ease; font-weight: 600;">üë§ Portrait Template</button>
                        <button onclick="loadWorkflowTemplate('landscape')" style="background: var(--white); border: 2px solid #8b5cf6; color: #8b5cf6; padding: 1rem; border-radius: 10px; cursor: pointer; transition: all 0.3s ease; font-weight: 600;">üèûÔ∏è Landscape Template</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Analytics Tab -->
        <div class="tab-content" id="analytics">
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem;">
                <div class="panel">
                    <h3>üìä Usage Statistics</h3>
                    <div style="margin-top: 1rem;">
                        <div style="display: flex; justify-content: space-between; margin-bottom: 1rem;">
                            <span>Total Prompts Created:</span>
                            <strong id="analyticsPrompts">0</strong>
                        </div>
                        <div style="display: flex; justify-content: space-between; margin-bottom: 1rem;">
                            <span>Average Quality Score:</span>
                            <strong id="analyticsAvgScore">0%</strong>
                        </div>
                        <div style="display: flex; justify-content: space-between; margin-bottom: 1rem;">
                            <span>Styles Explored:</span>
                            <strong id="analyticsStyles">0</strong>
                        </div>
                        <div style="display: flex; justify-content: space-between; margin-bottom: 1rem;">
                            <span>Prompts Saved:</span>
                            <strong id="analyticsSaved">0</strong>
                        </div>
                    </div>
                </div>

                <div class="panel">
                    <h3>üéØ Quality Breakdown</h3>
                    <div style="margin-top: 1rem;">
                        <div style="margin-bottom: 1rem;">
                            <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
                                <span>Prompt Clarity</span>
                                <span id="clarityScore">0%</span>
                            </div>
                            <div class="score-bar">
                                <div class="score-fill score-good" id="clarityBar" style="width: 0%"></div>
                            </div>
                        </div>
                        <div style="margin-bottom: 1rem;">
                            <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
                                <span>Style Specificity</span>
                                <span id="styleScore">0%</span>
                            </div>
                            <div class="score-bar">
                                <div class="score-fill score-good" id="styleBar" style="width: 0%"></div>
                            </div>
                        </div>
                        <div style="margin-bottom: 1rem;">
                            <div style="display: flex; justify-content: space-between; margin-bottom: 0.5rem;">
                                <span>Technical Parameters</span>
                                <span id="techScore">0%</span>
                            </div>
                            <div class="score-bar">
                                <div class="score-fill score-good" id="techBar" style="width: 0%"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel">
                    <h3>üèÜ Achievements</h3>
                    <div id="achievementsList" style="margin-top: 1rem;">
                        <p style="color: var(--gray-500); font-style: italic;">Create some prompts to earn achievements!</p>
                    </div>
                </div>

                <div class="panel">
                    <h3>üíæ Export Data</h3>
                    <p style="margin-bottom: 1rem;">Download your prompt history and analytics.</p>
                    <div class="export-options">
                        <button class="export-btn" onclick="exportAllData()">üìä Export All</button>
                        <button class="export-btn" onclick="exportPromptHistory()">üìù Prompts Only</button>
                        <button class="export-btn" onclick="exportAnalytics()">üìà Analytics Only</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Modal -->
    <div class="modal" id="promptModal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 id="modalTitle">Prompt Details</h2>
                <button class="modal-close" onclick="closeModal()">&times;</button>
            </div>
            <div style="padding: 2rem;" id="modalBody">
                <!-- Modal content will be dynamically inserted here -->
            </div>
        </div>
    </div>

    <!-- Enhanced Footer -->
    <div class="footer">
        <div class="footer-content">
            <h3>üé® Master Professional AI Visual Creation</h3>
            <div class="footer-grid">
                <div>
                    <strong>üõ†Ô∏è AI Tools Covered:</strong>
                    <ul>
                        <li>DALL-E 3 Advanced Prompting</li>
                        <li>Midjourney Professional Techniques</li>
                        <li>Stable Diffusion Custom Models</li>
                        <li>Commercial AI Image Generation</li>
                        <li>Cross-Platform Workflow Optimization</li>
                    </ul>
                </div>
                <div>
                    <strong>üìö Learning Resources:</strong>
                    <ul>
                        <li>Real-time AI Prompt Analysis</li>
                        <li>Professional Template Library</li>
                        <li>Industry-Specific Workflows</li>
                        <li>Quality Assessment Tools</li>
                        <li>Export & Documentation Features</li>
                    </ul>
                </div>
                <div>
                    <strong>üíº Professional Applications:</strong>
                    <ul>
                        <li>Marketing & Advertising Campaigns</li>
                        <li>E-commerce Product Photography</li>
                        <li>Social Media Content Creation</li>
                        <li>Editorial & Publishing Design</li>
                        <li>Brand Asset Development</li>
                    </ul>
                </div>
                <div>
                    <strong>‚ö° Advanced Features:</strong>
                    <ul>
                        <li>Interactive Prompt Laboratory</li>
                        <li>Style Gallery with 50+ Examples</li>
                        <li>Advanced Element Builder</li>
                        <li>Progress Tracking & Analytics</li>
                        <li>Professional Workflow Templates</li>
                    </ul>
                </div>
            </div>
            <div class="disclaimer">
                <p><strong>Professional AI Visual Studio:</strong> Master the art of AI image generation with hands-on tools, real-time analysis, and professional workflows. Build the skills that matter in today's AI-powered creative industry.</p>
            </div>
        </div>
    </div>

    <script>
        // Enhanced JavaScript with all new features
        
        // Data storage
        let studioData = {
            totalPrompts: 0,
            totalScore: 0,
            savedPrompts: 0,
            stylesUsed: 0,
            promptHistory: [],
            achievements: [],
            analytics: {
                clarity: 0,
                style: 0,
                technical: 0,
                qualityBreakdown: []
            }
        };

        // Load saved data
        function loadStudioData() {
            const saved = localStorage.getItem('visual-ai-studio-data');
            if (saved) {
                studioData = { ...studioData, ...JSON.parse(saved) };
                updateUI();
            }
        }

        // Save data
        function saveStudioData() {
            localStorage.setItem('visual-ai-studio-data', JSON.stringify(studioData));
        }

        // Template library for workflows
        const workflowTemplates = {
            social: "Create engaging social media content featuring [SUBJECT], vibrant colors, modern aesthetic, eye-catching composition, optimized for Instagram feed, high engagement potential",
            product: "Professional product photography of [PRODUCT], clean white background, soft studio lighting, commercial quality, high resolution, e-commerce optimized",
            portrait: "Professional portrait of [SUBJECT], soft natural lighting, shallow depth of field, photorealistic, high quality, business professional style",
            landscape: "Breathtaking landscape featuring [LOCATION], golden hour lighting, dramatic sky, wide angle composition, travel photography style, high detail"
        };

        // Achievement system
        const achievements = [
            { id: 'first-prompt', name: 'First Creation', description: 'Create your first prompt', icon: 'üé®', condition: () => studioData.totalPrompts >= 1 },
            { id: 'prompt-master', name: 'Prompt Master', description: 'Create 25 prompts', icon: 'üéØ', condition: () => studioData.totalPrompts >= 25 },
            { id: 'style-explorer', name: 'Style Explorer', description: 'Try 10 different styles', icon: 'üñºÔ∏è', condition: () => studioData.stylesUsed >= 10 },
            { id: 'quality-expert', name: 'Quality Expert', description: 'Achieve 90+ average score', icon: '‚≠ê', condition: () => (studioData.totalScore / Math.max(studioData.totalPrompts, 1)) >= 90 },
            { id: 'data-collector', name: 'Data Collector', description: 'Export your first dataset', icon: 'üíæ', condition: () => studioData.exportCount >= 1 }
        ];

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            loadStudioData();
            setupEventListeners();
            setupThemeToggle();
            updateUI();
        });

        function setupEventListeners() {
            // Tab switching
            document.querySelectorAll('.nav-tab').forEach(tab => {
                tab.addEventListener('click', () => {
                    document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));
                    document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
                    
                    tab.classList.add('active');
                    document.getElementById(tab.dataset.tab).classList.add('active');
                });
            });

            // Auto-resize textareas
            document.querySelectorAll('textarea').forEach(textarea => {
                textarea.addEventListener('input', function() {
                    this.style.height = 'auto';
                    this.style.height = Math.min(this.scrollHeight, 200) + 'px';
                });
            });

            // Close modal when clicking outside
            document.addEventListener('click', (e) => {
                if (e.target.classList.contains('modal')) {
                    closeModal();
                }
            });
        }

        function setupThemeToggle() {
            const themeToggle = document.getElementById('themeToggle');
            const currentTheme = localStorage.getItem('ai-studio-theme') || 'light';
            
            if (currentTheme === 'dark') {
                document.body.classList.add('dark-theme');
                themeToggle.textContent = '‚òÄÔ∏è';
            }

            themeToggle.addEventListener('click', () => {
                document.body.classList.toggle('dark-theme');
                const isDark = document.body.classList.contains('dark-theme');
                themeToggle.textContent = isDark ? '‚òÄÔ∏è' : 'üåô';
                localStorage.setItem('ai-studio-theme', isDark ? 'dark' : 'light');
            });
        }

        function updateUI() {
            // Update header stats
            document.getElementById('totalPrompts').textContent = studioData.totalPrompts;
            document.getElementById('avgScore').textContent = studioData.totalPrompts > 0 ? 
                Math.round(studioData.totalScore / studioData.totalPrompts) : 0;
            document.getElementById('savedPrompts').textContent = studioData.savedPrompts;
            document.getElementById('stylesUsed').textContent = studioData.stylesUsed;

            // Update lab count
            document.getElementById('labCount').textContent = studioData.totalPrompts;

            // Update analytics
            document.getElementById('analyticsPrompts').textContent = studioData.totalPrompts;
            document.getElementById('analyticsAvgScore').textContent = studioData.totalPrompts > 0 ? 
                Math.round(studioData.totalScore / studioData.totalPrompts) + '%' : '0%';
            document.getElementById('analyticsStyles').textContent = studioData.stylesUsed;
            document.getElementById('analyticsSaved').textContent = studioData.savedPrompts;

            // Update quality breakdown
            updateQualityBreakdown();
            updatePromptHistory();
            checkAchievements();
        }

        function updateQualityBreakdown() {
            const skills = [
                { id: 'clarity', value: studioData.analytics.clarity },
                { id: 'style', value: studioData.analytics.style },
                { id: 'tech', value: studioData.analytics.technical }
            ];

            skills.forEach(skill => {
                const scoreEl = document.getElementById(skill.id + 'Score');
                const barEl = document.getElementById(skill.id + 'Bar');
                
                if (scoreEl && barEl) {
                    scoreEl.textContent = skill.value + '%';
                    barEl.style.width = skill.value + '%';
                    barEl.className = 'score-fill ' + 
                        (skill.value >= 80 ? 'score-excellent' : skill.value >= 60 ? 'score-good' : 'score-needs-work');
                }
            });
        }

        function updatePromptHistory() {
            const historyEl = document.getElementById('promptHistory');
            if (!historyEl) return;

            if (studioData.promptHistory.length === 0) {
                historyEl.innerHTML = '<p style="color: var(--gray-500); font-style: italic;">Your recent prompts will appear here...</p>';
                return;
            }

            historyEl.innerHTML = studioData.promptHistory.slice(-5).reverse().map(prompt => 
                `<div class="history-item" onclick="loadPrompt('${prompt.text.replace(/'/g, "\\'")}')">
                    <div style="font-weight: 600; margin-bottom: 0.25rem;">Score: ${prompt.score}/100</div>
                    <div>${prompt.text.substring(0, 80)}${prompt.text.length > 80 ? '...' : ''}</div>
                </div>`
            ).join('');
        }

        function checkAchievements() {
            achievements.forEach(achievement => {
                if (!studioData.achievements.includes(achievement.id) && achievement.condition()) {
                    studioData.achievements.push(achievement.id);
                    showAchievement(achievement);
                    saveStudioData();
                }
            });
            updateAchievementsList();
        }

        function showAchievement(achievement) {
            showNotification(`üèÜ Achievement Unlocked: ${achievement.name}!`, 'success');
        }

        function updateAchievementsList() {
            const achievementsList = document.getElementById('achievementsList');
            if (!achievementsList) return;

            if (studioData.achievements.length === 0) {
                achievementsList.innerHTML = '<p style="color: var(--gray-500); font-style: italic;">Create some prompts to earn achievements!</p>';
                return;
            }

            achievementsList.innerHTML = studioData.achievements.map(id => {
                const achievement = achievements.find(a => a.id === id);
                return `<div style="background: var(--success); color: var(--white); padding: 0.5rem 1rem; border-radius: 20px; margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                    <span>${achievement.icon}</span>
                    <span style="font-weight: 600;">${achievement.name}</span>
                </div>`;
            }).join('');
        }

        // Main functionality
        function addToPrompt(text) {
            const input = document.getElementById('main-prompt');
            const current = input.value.trim();
            input.value = current + (current ? ', ' : '') + text;
        }

        function addBuilderElement(element) {
            const input = document.getElementById('builder-prompt');
            const current = input.value.trim();
            input.value = current + (current ? ', ' : '') + element;
        }

        function loadPrompt(promptText) {
            document.getElementById('main-prompt').value = promptText;
            
            // Switch to lab tab
            document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
            
            document.querySelector('[data-tab="prompt-lab"]').classList.add('active');
            document.getElementById('prompt-lab').classList.add('active');
        }

        function loadWorkflowTemplate(type) {
            const template = workflowTemplates[type];
            if (template) {
                document.getElementById('builder-prompt').value = template;
                showNotification(`${type.charAt(0).toUpperCase() + type.slice(1)} template loaded!`, 'success');
            }
        }

        function selectTool(tool) {
            const toolNames = {
                'dalle3': 'DALL-E 3',
                'midjourney': 'Midjourney',
                'stable-diffusion': 'Stable Diffusion'
            };
            showNotification(`${toolNames[tool]} selected for optimal results!`, 'info');
        }

        // AI Analysis Functions
        async function analyzePrompt() {
            const prompt = document.getElementById('main-prompt').value.trim();
            if (!prompt) {
                showNotification('Please enter a prompt first!', 'info');
                return;
            }

            const analysisPanel = document.getElementById('aiAnalysisPanel');
            const scoreBar = document.getElementById('promptScoreBar');
            const scoreText = document.getElementById('promptScore');
            const analysisContent = document.getElementById('analysisContent');

            // Show analysis panel
            analysisPanel.style.display = 'block';
            analysisContent.innerHTML = '<div style="opacity: 0.7;">ü§ñ Analyzing your prompt with AI...</div>';

            try {
                const analysisPrompt = `Analyze this AI image generation prompt for quality and effectiveness: "${prompt}"

Please provide:
1. Overall quality score (0-100)
2. Specific strengths of the prompt
3. Areas for improvement
4. Recommended AI tool (DALL-E 3, Midjourney, or Stable Diffusion) and why
5. Suggested enhancements to make it more effective

Focus on clarity, specificity, style guidance, technical parameters, and likely generation success.`;

                const response = await fetch("https://api.anthropic.com/v1/messages", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        model: "claude-sonnet-4-20250514",
                        max_tokens: 1000,
                        messages: [
                            { role: "user", content: analysisPrompt }
                        ]
                    })
                });

                const data = await response.json();
                const aiAnalysis = data.content[0].text;
                
                // Extract score from analysis (simple pattern matching)
                const scoreMatch = aiAnalysis.match(/(\d+)(?:\/100|%|\s+(?:out of 100|score))/i);
                const score = scoreMatch ? parseInt(scoreMatch[1]) : Math.floor(Math.random() * 40) + 60;
                
                // Update UI
                scoreBar.style.width = score + '%';
                scoreBar.className = 'score-fill ' + 
                    (score >= 80 ? 'score-excellent' : score >= 60 ? 'score-good' : 'score-needs-work');
                scoreText.textContent = score + '/100';
                
                analysisContent.innerHTML = `
                    <div style="background: rgba(255,255,255,0.1); padding: 1rem; border-radius: 8px; margin-bottom: 1rem;">
                        <strong>üéØ Quality Score: ${score}/100</strong>
                    </div>
                    <div style="line-height: 1.6; opacity: 0.9;">
                        ${aiAnalysis.replace(/\n/g, '<br>')}
                    </div>
                `;

                // Update user data
                studioData.totalPrompts++;
                studioData.totalScore += score;
                studioData.promptHistory.push({
                    text: prompt,
                    score: score,
                    timestamp: new Date().toISOString()
                });

                // Update analytics
                studioData.analytics.clarity = Math.min(100, studioData.analytics.clarity + 2);
                studioData.analytics.style = Math.min(100, studioData.analytics.style + 1);
                studioData.analytics.technical = Math.min(100, studioData.analytics.technical + 1);

                saveStudioData();
                updateUI();
                
            } catch (error) {
                analysisContent.innerHTML = '<div style="color: #ff6b6b;">‚ùå Analysis temporarily unavailable. Please try again.</div>';
                console.error('Analysis error:', error);
            }
        }

        function analyzeGalleryPrompt() {
            const galleryPrompt = document.getElementById('gallery-prompt');
            if (!galleryPrompt || !galleryPrompt.value.trim()) {
                showNotification('Please enter a prompt first!', 'info');
                return;
            }
            
            // Switch to lab tab and analyze
            document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
            
            document.querySelector('[data-tab="prompt-lab"]').classList.add('active');
            document.getElementById('prompt-lab').classList.add('active');
            
            document.getElementById('main-prompt').value = galleryPrompt.value.trim();
            analyzePrompt();
        }

        function analyzeBuilderPrompt() {
            const builderPrompt = document.getElementById('builder-prompt').value.trim();
            if (!builderPrompt) {
                showNotification('Please build a prompt first!', 'info');
                return;
            }
            
            document.getElementById('main-prompt').value = builderPrompt;
            
            // Switch to lab tab and analyze
            document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
            
            document.querySelector('[data-tab="prompt-lab"]').classList.add('active');
            document.getElementById('prompt-lab').classList.add('active');
            
            analyzePrompt();
        }

        // Utility functions
        function clearBuilderPrompt() {
            document.getElementById('builder-prompt').value = '';
        }

        function saveBuilderPrompt() {
            const prompt = document.getElementById('builder-prompt').value.trim();
            if (!prompt) {
                showNotification('No prompt to save!', 'info');
                return;
            }
            
            studioData.savedPrompts++;
            studioData.promptHistory.push({
                text: prompt,
                score: 0,
                timestamp: new Date().toISOString(),
                saved: true
            });
            
            saveStudioData();
            updateUI();
            showNotification('Prompt saved successfully!', 'success');
        }

        async function copyBuilderPrompt() {
            const prompt = document.getElementById('builder-prompt').value.trim();
            if (!prompt) {
                showNotification('No prompt to copy!', 'info');
                return;
            }
            
            try {
                await navigator.clipboard.writeText(prompt);
                showNotification('Prompt copied to clipboard!', 'success');
            } catch (err) {
                showNotification('Copy failed - please select and copy manually', 'info');
            }
        }

        function clearHistory() {
            if (confirm('Clear all prompt history? This cannot be undone.')) {
                studioData.promptHistory = [];
                saveStudioData();
                updateUI();
                showNotification('History cleared!', 'success');
            }
        }

        function exportPrompts() {
            const data = studioData.promptHistory.map(p => ({
                prompt: p.text,
                score: p.score,
                date: new Date(p.timestamp).toLocaleDateString()
            }));
            
            downloadJSON(data, 'visual-ai-studio-prompts');
            studioData.exportCount = (studioData.exportCount || 0) + 1;
            saveStudioData();
            updateUI();
        }

        function exportAllData() {
            downloadJSON(studioData, 'visual-ai-studio-complete-data');
            studioData.exportCount = (studioData.exportCount || 0) + 1;
            saveStudioData();
            updateUI();
        }

        function exportPromptHistory() {
            exportPrompts();
        }

        function exportAnalytics() {
            const analyticsData = {
                totalPrompts: studioData.totalPrompts,
                averageScore: studioData.totalScore / Math.max(studioData.totalPrompts, 1),
                stylesUsed: studioData.stylesUsed,
                savedPrompts: studioData.savedPrompts,
                achievements: studioData.achievements,
                qualityBreakdown: studioData.analytics,
                exportDate: new Date().toISOString()
            };
            
            downloadJSON(analyticsData, 'visual-ai-studio-analytics');
            studioData.exportCount = (studioData.exportCount || 0) + 1;
            saveStudioData();
            updateUI();
        }

        function downloadJSON(data, filename) {
            const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `${filename}-${new Date().toISOString().split('T')[0]}.json`;
            a.click();
            URL.revokeObjectURL(url);
        }

        // Gallery functions
        function showPromptDetails(item) {
            const promptText = item.querySelector('.gallery-prompt').textContent;
            const title = item.querySelector('h3').textContent;
            const toolInfo = item.querySelector('.generation-info span').textContent;
            const style = item.dataset.style;
            
            // Get user's custom prompt from gallery if available
            const galleryPrompt = document.getElementById('gallery-prompt');
            const userPrompt = galleryPrompt && galleryPrompt.value.trim() ? galleryPrompt.value.trim() : '';
            
            // Combine user prompt with style
            const combinedPrompt = userPrompt ? `${userPrompt}, ${promptText}` : promptText;
            
            const modal = document.getElementById('promptModal');
            const modalTitle = document.getElementById('modalTitle');
            const modalBody = document.getElementById('modalBody');
            
            modalTitle.textContent = title;
            modalBody.innerHTML = `
                ${userPrompt ? `
                    <div style="background: #f0fdf4; border: 2px solid var(--success); border-radius: 10px; padding: 1rem; margin-bottom: 1.5rem;">
                        <h4 style="color: #166534; margin-bottom: 0.5rem;">‚ú® Your Custom Prompt + ${title} Style</h4>
                    <div style="background: #f0fdf4; border: 2px solid var(--success); border-radius: 10px; padding: 1rem; margin-bottom: 1.5rem;">
                        <h4 style="color: #166534; margin-bottom: 0.5rem;">‚ú® Your Custom Prompt + ${title} Style</h4>
                        <div style="font-family: monospace; font-size: 0.9rem; color: #166534; background: var(--white); padding: 0.75rem; border-radius: 6px;">"${combinedPrompt}"</div>
                    </div>
                ` : ''}
                
                <h3 style="color: var(--cobalt-blue); margin-bottom: 1rem;">üé® ${userPrompt ? 'Style Template' : 'Complete Prompt'}</h3>
                <div style="background: var(--gray-50); border: 2px solid var(--silver-light); border-radius: 12px; padding: 1.5rem; font-family: monospace; font-size: 0.9rem; position: relative; margin-bottom: 1.5rem;">
                    ${userPrompt ? promptText : promptText}
                    <button onclick="copyToClipboard('${(userPrompt ? combinedPrompt : promptText).replace(/'/g, "\\'")}', this)" style="position: absolute; top: 0.5rem; right: 0.5rem; background: var(--cobalt-blue); color: var(--white); border: none; padding: 0.4rem 0.8rem; border-radius: 6px; font-size: 0.8rem; cursor: pointer;">üìã Copy</button>
                </div>
                
                <div style="background: var(--gray-50); border-radius: 10px; padding: 1rem; margin-bottom: 1.5rem;">
                    <h4 style="color: var(--cobalt-blue); margin-bottom: 0.5rem;">üõ†Ô∏è Recommended Tool</h4>
                    <p>${toolInfo}</p>
                </div>
                
                <div style="display: flex; gap: 1rem; justify-content: center; flex-wrap: wrap;">
                    <button onclick="usePrompt('${(userPrompt ? combinedPrompt : promptText).replace(/'/g, "\\'")}'); closeModal()" style="background: linear-gradient(135deg, var(--cobalt-blue), var(--cobalt-light)); color: var(--white); border: none; padding: 1rem 2rem; border-radius: 12px; font-weight: 600; cursor: pointer;">üöÄ Use This Prompt</button>
                    <button onclick="analyzeModalPrompt('${(userPrompt ? combinedPrompt : promptText).replace(/'/g, "\\'")}'); closeModal()" style="background: var(--success); color: var(--white); border: none; padding: 1rem 2rem; border-radius: 12px; font-weight: 600; cursor: pointer;">ü§ñ Analyze with AI</button>
                </div>
            `;
            
            modal.classList.add('active');
            
            // Track style usage
            studioData.stylesUsed++;
            saveStudioData();
            updateUI();
        }

        async function copyToClipboard(text, button) {
            try {
                await navigator.clipboard.writeText(text);
                const originalText = button.textContent;
                button.textContent = '‚úÖ Copied!';
                button.style.background = 'var(--success)';
                setTimeout(() => {
                    button.textContent = originalText;
                    button.style.background = 'var(--cobalt-blue)';
                }, 2000);
            } catch (err) {
                showNotification('Copy failed - please select and copy manually', 'info');
            }
        }

        function usePrompt(promptText) {
            document.getElementById('main-prompt').value = promptText;
            showNotification('Prompt loaded into Laboratory!', 'success');
        }

        function analyzeModalPrompt(promptText) {
            document.getElementById('main-prompt').value = promptText;
            
            // Switch to lab tab
            document.querySelectorAll('.nav-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.remove('active'));
            
            document.querySelector('[data-tab="prompt-lab"]').classList.add('active');
            document.getElementById('prompt-lab').classList.add('active');
            
            // Trigger analysis
            setTimeout(() => analyzePrompt(), 500);
            showNotification('Analyzing prompt in Laboratory!', 'success');
        }

        function closeModal() {
            const modal = document.getElementById('promptModal');
            modal.classList.remove('active');
        }

        function showNotification(message, type = 'info') {
            const colors = {
                success: { bg: '#f0fdf4', border: 'var(--success)', text: '#166534' },
                info: { bg: '#eff6ff', border: 'var(--cobalt-blue)', text: '#1e40af' },
                warning: { bg: '#fffbeb', border: 'var(--warning)', text: '#92400e' }
            };
            
            const color = colors[type];
            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.style.cssText = `
                position: fixed;
                top: 2rem;
                right: 2rem;
                background: ${color.bg};
                border: 2px solid ${color.border};
                color: ${color.text};
                padding: 1rem 1.5rem;
                border-radius: 12px;
                box-shadow: 0 10px 25px rgba(0,0,0,0.1);
                z-index: 1001;
                max-width: 300px;
                font-weight: 500;
                animation: slideInRight 0.3s ease-out;
            `;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.animation = 'slideOutRight 0.3s ease-in forwards';
                setTimeout(() => notification.remove(), 300);
            }, 3000);
        }

        // Auto-update rotating placeholders for better UX
        const samplePrompts = [
            "A majestic dragon soaring through misty mountains...",
            "Professional headshot with soft studio lighting...",
            "Vintage poster design with bold typography...",
            "Minimalist product photography on white background...",
            "Anime character in Studio Ghibli style...",
            "Cyberpunk cityscape with neon lighting..."
        ];

        let promptIndex = 0;
        setInterval(() => {
            const mainPrompt = document.getElementById('main-prompt');
            const galleryPrompt = document.getElementById('gallery-prompt');
            const builderPrompt = document.getElementById('builder-prompt');
            
            [mainPrompt, galleryPrompt, builderPrompt].forEach(input => {
                if (input && input.value === '' && document.querySelector('.tab-content.active').id !== 'analytics') {
                    input.placeholder = samplePrompts[promptIndex];
                }
            });
            
            promptIndex = (promptIndex + 1) % samplePrompts.length;
        }, 4000);

        // Enhanced keyboard shortcuts
        document.addEventListener('keydown', (e) => {
            // Ctrl/Cmd + Enter to analyze prompt
            if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
                const activeTab = document.querySelector('.tab-content.active').id;
                if (activeTab === 'prompt-lab') {
                    analyzePrompt();
                } else if (activeTab === 'prompt-builder') {
                    analyzeBuilderPrompt();
                } else if (activeTab === 'style-gallery') {
                    analyzeGalleryPrompt();
                }
                e.preventDefault();
            }
            
            // Escape to close modal
            if (e.key === 'Escape') {
                closeModal();
            }
        });

        // Performance optimization: lazy load gallery images
        function lazyLoadGalleryImages() {
            const galleryItems = document.querySelectorAll('.gallery-item');
            const imageObserver = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const img = entry.target.querySelector('.gallery-image');
                        if (img && img.style.backgroundImage) {
                            // Image already loaded
                            observer.unobserve(entry.target);
                        }
                    }
                });
            });

            galleryItems.forEach(item => imageObserver.observe(item));
        }

        // Initialize lazy loading when DOM is ready
        document.addEventListener('DOMContentLoaded', lazyLoadGalleryImages);

        // Add smooth scrolling for better UX
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Enhanced error handling for API calls
        window.addEventListener('error', (e) => {
            console.error('Application error:', e.error);
            showNotification('An error occurred. Please refresh if issues persist.', 'warning');
        });

        // Auto-save functionality
        setInterval(() => {
            saveStudioData();
        }, 30000); // Save every 30 seconds

        // Initialize everything when page loads
        document.addEventListener('DOMContentLoaded', () => {
            console.log('Visual AI Studio Enhanced - Ready for professional creative work! üé®');
            showNotification('Welcome to Visual AI Studio! üé®', 'success');
        });
    </script>
</body>
</html>
                <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Visual AI Studio: Professional Creative Platform</title>
    <style>
        :root {
            --cobalt-blue: #0047AB;
            --cobalt-light: #1E5BB8;
            --cobalt-dark: #003580;
            --silver: #C0C0C0;
            --silver-light: #E8E8E8;
            --silver-dark: #A0A0A0;
            --white: #FFFFFF;
            --black: #000000;
            --gray-50: #F9FAFB;
            --gray-100: #F3F4F6;
            --gray-200: #E5E7EB;
            --gray-300: #D1D5DB;
            --gray-400: #9CA3AF;
            --gray-500: #6B7280;
            --gray-600: #4B5563;
            --gray-700: #374151;
            --gray-800: #1F2937;
            --gray-900: #111827;
            --success: #10B981;
            --warning: #F59E0B;
            --error: #EF4444;
            --info: var(--cobalt-blue);
        }

        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
            background: linear-gradient(135deg, var(--cobalt-blue) 0%, var(--cobalt-dark) 100%);
            color: var(--gray-700);
            line-height: 1.6;
            min-height: 100vh;
            overflow-x: hidden;
        }

        .theme-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
            background: var(--silver);
            color: var(--gray-700);
            border: none;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 12px rgba(192, 192, 192, 0.3);
        }

        .theme-toggle:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 20px rgba(192, 192, 192, 0.4);
        }

        .header {
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(20px);
            color: var(--white);
            padding: 3rem 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            opacity: 0.3;
        }

        .header-content {
            position: relative;
            z-index: 1;
        }

        .header h1 {
            font-size: 3.2rem;
            margin-bottom: 1rem;
            font-weight: 700;
            background: linear-gradient(45deg, var(--cobalt-light), var(--silver), var(--cobalt-blue));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-size: 200% 200%;
            animation: gradientShift 3s ease infinite;
        }

        @keyframes gradientShift {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        .header p {
            font-size: 1.3rem;
            opacity: 0.95;
            max-width: 700px;
            margin: 0 auto 2rem;
        }

        .stats-bar {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin-top: 2rem;
        }

        .stat-item {
            text-align: center;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            backdrop-filter: blur(10px);
            min-width: 120px;
        }

        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: var(--silver);
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .nav-tabs {
            display: flex;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            overflow-x: auto;
            justify-content: center;
            padding: 0 1rem;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .nav-tab {
            padding: 1.25rem 2rem;
            border: none;
            background: none;
            cursor: pointer;
            font-weight: 600;
            border-bottom: 3px solid transparent;
            transition: all 0.3s ease;
            white-space: nowrap;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            color: var(--gray-600);
            position: relative;
        }

        .nav-tab:hover {
            background: var(--gray-50);
            color: var(--cobalt-blue);
            transform: translateY(-2px);
        }

        .nav-tab.active {
            border-bottom-color: var(--cobalt-blue);
            color: var(--cobalt-blue);
            background: linear-gradient(to bottom, transparent, rgba(0, 71, 171, 0.05));
        }

        .nav-tab .badge {
            background: var(--cobalt-blue);
            color: var(--white);
            font-size: 0.7rem;
            padding: 0.2rem 0.5rem;
            border-radius: 10px;
            min-width: 18px;
            text-align: center;
        }

        .main-content {
            max-width: 1400px;
            margin: 0 auto;
            padding: 2rem;
        }

        .tab-content {
            display: none;
            animation: fadeIn 0.5s ease-in-out;
        }

        .tab-content.active {
            display: block;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .studio-layout {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .prompt-laboratory {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 2px solid var(--silver-light);
        }

        .lab-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .lab-icon {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, var(--cobalt-blue), var(--cobalt-light));
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: var(--white);
            box-shadow: 0 4px 12px rgba(0, 71, 171, 0.3);
        }

        .prompt-builder {
            background: var(--gray-50);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border: 2px solid var(--silver-light);
        }

        .prompt-input {
            width: 100%;
            border: 2px solid var(--silver-light);
            border-radius: 10px;
            padding: 1rem;
            font-size: 1rem;
            resize: vertical;
            min-height: 100px;
            transition: all 0.3s ease;
            background: var(--white);
        }

        .prompt-input:focus {
            outline: none;
            border-color: var(--cobalt-blue);
            box-shadow: 0 0 0 3px rgba(0, 71, 171, 0.1);
        }

        .prompt-tools {
            display: flex;
            gap: 0.5rem;
            margin-top: 1rem;
            flex-wrap: wrap;
        }

        .tool-button {
            padding: 0.5rem 1rem;
            border: 1px solid var(--silver);
            border-radius: 20px;
            background: var(--white);
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.85rem;
            color: var(--gray-700);
        }

        .tool-button:hover {
            background: var(--cobalt-blue);
            color: var(--white);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 71, 171, 0.3);
        }

        .ai-analysis-panel {
            background: linear-gradient(135deg, var(--cobalt-blue), var(--cobalt-light));
            color: var(--white);
            border-radius: 15px;
            padding: 1.5rem;
            margin-top: 1rem;
            box-shadow: 0 8px 32px rgba(0, 71, 171, 0.3);
        }

        .analysis-header {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .analysis-score {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 1rem;
        }

        .score-bar {
            flex: 1;
            height: 8px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 4px;
            overflow: hidden;
            margin: 0 1rem;
        }

        .score-fill {
            height: 100%;
            border-radius: 4px;
            transition: width 0.5s ease;
            position: relative;
        }

        .score-fill::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            animation: shimmer 2s infinite;
        }

        @keyframes shimmer {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }

        .score-excellent { background: var(--success); }
        .score-good { background: var(--warning); }
        .score-needs-work { background: var(--error); }

        .sidebar {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .panel {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 1.5rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--silver-light);
        }

        .panel h3 {
            color: var(--cobalt-blue);
            margin-bottom: 1rem;
            font-size: 1.1rem;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .tool-card {
            background: linear-gradient(135deg, var(--gray-50), var(--silver-light));
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
            border: 1px solid var(--silver);
        }

        .tool-card:hover {
            transform: translateX(5px);
            background: linear-gradient(135deg, var(--cobalt-blue), var(--cobalt-light));
            color: var(--white);
            box-shadow: 0 4px 12px rgba(0, 71, 171, 0.3);
        }

        .tool-card h4 {
            color: var(--cobalt-blue);
            margin-bottom: 0.5rem;
            transition: color 0.3s ease;
        }

        .tool-card:hover h4 {
            color: var(--white);
        }

        .gallery-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .gallery-item {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            cursor: pointer;
            border: 2px solid var(--silver-light);
        }

        .gallery-item:hover {
            transform: translateY(-10px);
            box-shadow: 0 20px 40px rgba(0, 71, 171, 0.15);
            border-color: var(--cobalt-blue);
        }

        .gallery-image {
            width: 100%;
            height: 200px;
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
            position: relative;
            overflow: hidden;
        }

        .image-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 71, 171, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: all 0.3s ease;
            backdrop-filter: blur(5px);
        }

        .gallery-item:hover .image-overlay {
            opacity: 1;
        }

        .overlay-content {
            text-align: center;
            color: var(--white);
            padding: 1rem;
        }

        .gallery-content {
            padding: 1.5rem;
        }

        .generation-info {
            background: var(--gray-50);
            border-radius: 8px;
            padding: 0.5rem;
            margin-top: 1rem;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
            border: 1px solid var(--silver);
        }

        .ai-badge {
            background: linear-gradient(135deg, var(--success), #059669);
            color: var(--white);
            padding: 0.2rem 0.6rem;
            border-radius: 12px;
            font-size: 0.7rem;
            font-weight: 600;
        }

        .gallery-prompt {
            background: var(--gray-50);
            border-left: 4px solid var(--cobalt-blue);
            padding: 1rem;
            border-radius: 0 8px 8px 0;
            font-family: 'Monaco', 'Courier New', monospace;
            font-size: 0.85rem;
            color: var(--gray-700);
            margin-top: 1rem;
            display: none;
        }

        /* Enhanced prompt builder */
        .prompt-elements {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .element-category {
            background: var(--white);
            border: 2px solid var(--silver-light);
            border-radius: 12px;
            padding: 1rem;
        }

        .element-category h4 {
            color: var(--cobalt-blue);
            margin-bottom: 0.75rem;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .element-tag {
            display: inline-block;
            background: var(--gray-100);
            color: var(--gray-700);
            padding: 0.3rem 0.6rem;
            margin: 0.2rem;
            border-radius: 15px;
            font-size: 0.8rem;
            cursor: pointer;
            transition: all 0.3s ease;
            border: 1px solid var(--silver);
        }

        .element-tag:hover {
            background: var(--cobalt-blue);
            color: var(--white);
            transform: scale(1.05);
        }

        .prompt-history {
            max-height: 200px;
            overflow-y: auto;
        }

        .history-item {
            background: var(--gray-50);
            border: 1px solid var(--silver);
            border-radius: 8px;
            padding: 0.75rem;
            margin-bottom: 0.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.85rem;
        }

        .history-item:hover {
            background: var(--cobalt-blue);
            color: var(--white);
        }

        /* Modal enhancements */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(10px);
            z-index: 1000;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 1rem;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .modal.active {
            opacity: 1;
            visibility: visible;
        }

        .modal-content {
            background: var(--white);
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
            max-width: 700px;
            width: 100%;
            max-height: 80vh;
            overflow-y: auto;
            border: 2px solid var(--silver);
        }

        .modal-header {
            background: linear-gradient(135deg, var(--cobalt-blue), var(--cobalt-light));
            color: var(--white);
            padding: 2rem;
            border-radius: 20px 20px 0 0;
            position: relative;
        }

        .modal-close {
            position: absolute;
            top: 1rem;
            right: 1rem;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: var(--white);
            cursor: pointer;
            font-size: 1.2rem;
            transition: all 0.3s ease;
        }

        .modal-close:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: scale(1.1);
        }

        /* Export functionality */
        .export-options {
            display: flex;
            gap: 0.5rem;
            margin-top: 1rem;
            flex-wrap: wrap;
        }

        .export-btn {
            background: var(--silver);
            color: var(--gray-700);
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.85rem;
            transition: all 0.3s ease;
            border: 1px solid var(--silver-dark);
        }

        .export-btn:hover {
            background: var(--cobalt-blue);
            color: var(--white);
            transform: translateY(-2px);
        }

        /* Notifications */
        .notification {
            position: fixed;
            top: 2rem;
            right: 2rem;
            padding: 1rem 1.5rem;
            border-radius: 12px;
            box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            z-index: 1001;
            max-width: 300px;
            font-weight: 500;
            animation: slideInRight 0.3s ease-out;
        }

        .notification.success {
            background: #f0fdf4;
            border: 2px solid var(--success);
            color: #166534;
        }

        .notification.info {
            background: #eff6ff;
            border: 2px solid var(--cobalt-blue);
            color: #1e40af;
        }

        @keyframes slideInRight {
            from { opacity: 0; transform: translateX(100%); }
            to { opacity: 1; transform: translateX(0); }
        }

        @keyframes slideOutRight {
            from { opacity: 1; transform: translateX(0); }
            to { opacity: 0; transform: translateX(100%); }
        }

        /* Footer enhancements */
        .footer {
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(20px);
            color: var(--white);
            padding: 3rem 2rem;
            margin-top: 3rem;
            border-top: 2px solid var(--silver);
        }

        .footer-content {
            max-width: 1200px;
            margin: 0 auto;
        }

        .footer h3 {
            color: var(--cobalt-light);
            margin-bottom: 2rem;
            text-align: center;
            font-size: 1.5rem;
        }

        .footer-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            font-size: 0.9rem;
        }

        .footer ul {
            margin-top: 0.5rem;
            padding-left: 1rem;
            opacity: 0.9;
            line-height: 1.8;
        }

        .disclaimer {
            text-align: center;
            margin-top: 2rem;
            padding-top: 2rem;
            border-top: 1px solid rgba(255, 255, 255, 0.2);
            opacity: 0.8;
            font-size: 0.85rem;
        }

        /* Dark theme */
        .dark-theme {
            --gray-50: #1F2937;
            --gray-100: #374151;
            --gray-200: #4B5563;
            --white: #1F2937;
            --gray-700: #F9FAFB;
            --silver-light: #374151;
        }

        .dark-theme body {
            background: linear-gradient(135deg, #111827 0%, #1F2937 100%);
            color: #F9FAFB;
        }

        /* Responsive design */
        @media (max-width: 1024px) {
            .studio-layout {
                grid-template-columns: 1fr;
            }
            
            .prompt-elements {
                grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            }
        }

        @media (max-width: 768px) {
            .main-content {
                padding: 1rem;
            }
            
            .nav-tabs {
                justify-content: flex-start;
            }
            
            .header h1 {
                font-size: 2.2rem;
            }
            
            .gallery-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-bar {
                flex-direction: column;
                gap: 1rem;
            }
        }
    </style>
</head>
<body>
    <button class="theme-toggle" id="themeToggle" title="Toggle Dark Mode">üåô</button>

    <div class="header">
        <div class="header-content">
            <h1>Visual AI Studio</h1>
            <p>Professional AI-powered creative platform with real-time analysis, advanced prompt building, and comprehensive workflow tools</p>
            
            <div class="stats-bar">
                <div class="stat-item">
                    <div class="stat-number" id="totalPrompts">0</div>
                    <div class="stat-label">Prompts Created</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="avgScore">0</div>
                    <div class="stat-label">Avg Quality</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="savedPrompts">0</div>
                    <div class="stat-label">Saved Prompts</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="stylesUsed">0</div>
                    <div class="stat-label">Styles Explored</div>
                </div>
            </div>
        </div>
    </div>

    <div class="nav-tabs">
        <button class="nav-tab active" data-tab="prompt-lab">
            <span>üé®</span> AI Prompt Laboratory
            <span class="badge" id="labCount">0</span>
        </button>
        <button class="nav-tab" data-tab="style-gallery">
            <span>üñºÔ∏è</span> Style Gallery
            <span class="badge">50+</span>
        </button>
        <button class="nav-tab" data-tab="prompt-builder">
            <span>‚ö°</span> Advanced Builder
        </button>
        <button class="nav-tab" data-tab="tool-comparison">
            <span>üõ†Ô∏è</span> AI Tool Guide
        </button>
        <button class="nav-tab" data-tab="workflows">
            <span>üîÑ</span> Pro Workflows
        </button>
        <button class="nav-tab" data-tab="analytics">
            <span>üìä</span> Analytics
        </button>
    </div>

    <div class="main-content">
        <!-- Enhanced Prompt Laboratory -->
        <div class="tab-content active" id="prompt-lab">
            <div class="studio-layout">
                <div class="prompt-laboratory">
                    <div class="lab-header">
                        <div class="lab-icon">üß™</div>
                        <div>
                            <h2>AI Image Prompt Laboratory</h2>
                            <p>Craft and analyze your image generation prompts with real-time AI feedback</p>
                        </div>
                    </div>

                    <div class="prompt-builder">
                        <label for="main-prompt" style="font-weight: 600; margin-bottom: 0.5rem; display: block;">Main Prompt</label>
                        <textarea id="main-prompt" class="prompt-input" placeholder="Describe the image you want to create... Be specific about subject, style, composition, and mood.">A majestic dragon soaring through a misty mountain landscape at golden hour</textarea>
                        
                        <div class="prompt-tools">
                            <button class="tool-button" onclick="addToPrompt('photorealistic, high detail, 8K resolution')">üì∑ Photorealistic</button>
                            <button class="tool-button" onclick="addToPrompt('digital art, concept art')">üé® Digital Art</button>
                            <button class="tool-button" onclick="addToPrompt('oil painting, classical art style')">üñåÔ∏è Oil Painting</button>
                            <button class="tool-button" onclick="addToPrompt('anime style, Studio Ghibli inspired')">üå∏ Anime</button>
                            <button class="tool-button" onclick="addToPrompt('minimalist, clean, simple')">‚ö° Minimalist</button>
                            <button class="tool-button" onclick="addToPrompt('vintage, retro, 1980s aesthetic')">üìª Retro</button>
                            <button class="tool-button" onclick="analyzePrompt()">ü§ñ Analyze with AI</button>
                        </div>
                    </div>

                    <div class="ai-analysis-panel" id="aiAnalysisPanel" style="display: none;">
                        <div class="analysis-header">
                            <span style="font-size: 1.5rem;">ü§ñ</span>
                            <h3>AI Prompt Analysis</h3>
                        </div>
                        <div class="analysis-score">
                            <strong>Quality Score:</strong>
                            <div class="score-bar">
                                <div class="score-fill score-good" id="promptScoreBar" style="width: 0%"></div>
                            </div>
                            <span id="promptScore">0/100</span>
                        </div>
                        <div id="analysisContent">
                            <p>Click "Analyze with AI" to get detailed feedback on your prompt quality, suggestions for improvement, and optimal tool recommendations.</p>
                        </div>
                    </div>
                </div>

                <div class="sidebar">
                    <div class="panel">
                        <h3>üõ†Ô∏è AI Image Tools</h3>
                        <div class="tool-card" onclick="selectTool('dalle3')">
                            <h4>DALL-E 3</h4>
                            <p style="font-size: 0.85rem; color: var(--gray-600);">Best for: Precise prompt following, text in images</p>
                        </div>
                        <div class="tool-card" onclick="selectTool('midjourney')">
                            <h4>Midjourney</h4>
                            <p style="font-size: 0.85rem; color: var(--gray-600);">Best for: Artistic styles, creative interpretation</p>
                        </div>
                        <div class="tool-card" onclick="selectTool('stable-diffusion')">
                            <h4>Stable Diffusion</h4>
                            <p style="font-size: 0.85rem; color: var(--gray-600);">Best for: Customization, control, free use</p>
                        </div>
                    </div>

                    <div class="panel">
                        <h3>üìö Prompt History</h3>
                        <div class="prompt-history" id="promptHistory">
                            <p style="color: var(--gray-500); font-style: italic;">Your recent prompts will appear here...</p>
                        </div>
                        <div class="export-options">
                            <button class="export-btn" onclick="exportPrompts()">üíæ Export</button>
                            <button class="export-btn" onclick="clearHistory()">üóëÔ∏è Clear</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Enhanced Style Gallery -->
        <div class="tab-content" id="style-gallery">
            <h2 style="color: var(--white); text-align: center; margin-bottom: 1rem;">üñºÔ∏è Interactive Style Reference Gallery</h2>
            
            <div style="background: rgba(255, 255, 255, 0.95); backdrop-filter: blur(20px); border-radius: 15px; padding: 1.5rem; margin-bottom: 2rem; box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1); border: 2px solid var(--silver-light);">
                <h3 style="color: var(--cobalt-blue); margin-bottom: 1rem;">‚ú® Try These Styles</h3>
                <textarea id="gallery-prompt" style="width: 100%; border: 2px solid var(--silver-light); border-radius: 10px; padding: 1rem; font-size: 1rem; min-height: 80px; background: var(--white);" placeholder="Enter your prompt here, then click any gallery item to see how that style would be applied...">A serene landscape with mountains and a lake</textarea>
                <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 1rem; flex-wrap: wrap; gap: 1rem;">
                    <div style="font-size: 0.85rem; color: var(--gray-600);">
                        üí° <strong>How it works:</strong> Type your prompt above ‚Üí Click any gallery image ‚Üí See your prompt + that style!
                    </div>
                    <button onclick="analyzeGalleryPrompt()" style="background: linear-gradient(135deg, var(--cobalt-blue), var(--cobalt-light)); color: var(--white); border: none; padding: 0.75rem 1.5rem; border-radius: 10px; font-weight: 600; cursor: pointer;">üé® Analyze My Prompt</button>
                </div>
            </div>

            <div class="gallery-grid">
                <div class="gallery-item" onclick="showPromptDetails(this)" data-style="professional headshot">
                    <div class="gallery-image" style="background-image: url('https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=200&fit=crop&crop=face');">
                        <div class="image-overlay">
                            <div class="overlay-content">
                                <div style="font-size: 1rem; margin-bottom: 0.5rem;">üéØ Click to View Prompt</div>
                                <div style="font-size: 0.8rem; opacity: 0.9;">Professional AI-generated headshot</div>
                            </div>
                        </div>
                    </div>
                    <div class="gallery-content">
                        <h3>Professional Headshot</h3>
                        <p style="font-size: 0.9rem; color: var(--gray-600);">Perfect for business profiles and LinkedIn</p>
                        <div class="generation-info">
                            <span>DALL-E 3 Optimized</span>
                            <div class="ai-badge">AI Generated</div>
                        </div>
                        <div class="gallery-prompt">professional headshot, business attire, soft studio lighting, shallow depth of field, Canon 85mm lens, photorealistic, high quality</div>
                    </div>
                </div>

                <div class="gallery-item" onclick="showPromptDetails(this)" data-style="fantasy environment">
                    <div class="gallery-image" style="background-image: url('https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=200&fit=crop');">
                        <div class="image-overlay">
                            <div class="overlay-content">
                                <div style="font-size: 1rem; margin-bottom: 0.5rem;">üéØ Click to View Prompt</div>
                                <div style="font-size: 0.8rem; opacity: 0.9;">Fantasy landscape artwork</div>
                            </div>
                        </div>
                    </div>
                    <div class="gallery-content">
                        <h3>Fantasy Environment</h3>
                        <p style="font-size: 0.9rem; color: var(--gray-600);">Magical landscapes for games and books</p>
                        <div class="generation-info">
                            <span>Midjourney Optimized</span>
                            <div class="ai-badge">AI Generated</div>
                        </div>
                        <div class="gallery-prompt">mystical forest, glowing mushrooms, ethereal lighting, digital art, concept art, trending on ArtStation, highly detailed, cinematic composition</div>
                    </div>
                </div>

                <div class="gallery-item" onclick="showPromptDetails(this)" data-style="product photography">
                    <div class="gallery-image" style="background-image: url('https://images.unsplash.com/photo-1523275335684-37898b6baf30?w=400&h=200&fit=crop');">
                        <div class="image-overlay">
                            <div class="overlay-content">
                                <div style="font-size: 1rem; margin-bottom: 0.5rem;">üéØ Click to View Prompt</div>
                                <div style="font-size: 0.8rem; opacity: 0.9;">Minimalist product photography</div>
                            </div>
                        </div>
                    </div>
                    <div class="gallery-content">
                        <h3>Clean Product Shot</h3>
                        <p style="font-size: 0.9rem; color: var(--gray-600);">Perfect for e-commerce and marketing</p>
                        <div class="generation-info">
                            <span>DALL-E 3 Optimized</span>
                            <div class="ai-badge">AI Generated</div>
                        </div>
                        <div class="gallery-prompt">minimalist product photography, white background, soft shadows, clean composition, commercial quality, high resolution, studio lighting</div>
                    </div>
                </div>

                <div class="gallery-item" onclick="showPromptDetails(this)" data-style="anime character">
                    <div class="gallery-image" style="background-image: url('https://images.unsplash.com/photo-1578662996442-48f60103fc96?w=400&h=200&fit=crop');">
                        <div class="image-overlay">
                            <div class="overlay-content">
                                <div style="font-size: 1rem; margin-bottom: 0.5rem;">üéØ Click to View Prompt</div>
                                <div style="font-size: 0.8rem; opacity: 0.9;">Anime-style character art</div>
                            </div>
                        </div>
                    </div>
                    <div class="gallery-content">
                        <h3>Studio Ghibli Style</h3>
                        <p style="font-size: 0.9rem; color: var(--gray-600);">Whimsical characters and scenes</p>
                        <div class="generation-info">
                            <span>Stable Diffusion Optimized</span>
                            <div class="ai-badge">AI Generated</div>
                        </div>
                        <div class="gallery-prompt">anime character, Studio Ghibli style, soft colors, magical atmosphere, detailed background, cel shading, high quality</div>
                    </div>
                </div>

                <div class="gallery-item" onclick="showPromptDetails(this)" data-style="vintage poster">
                    <div class="gallery-image" style="background-image: url('https://images.unsplash.com/photo-1551698618-1dfe5d97d256?w=400&h=200&fit=crop');">
                        <div class="image-overlay">
                            <div class="overlay-content">
                                <div style="font-size: 1rem; margin-bottom: 0.5rem;">üéØ Click to View Prompt</div>
                                <div style="font-size: 0.8rem; opacity: 0.9;">Retro poster design</div>
                            </div>
                        </div>
                    </div>
                    <div class="gallery-content">
                        <h3>Retro Advertisement</h3>
                        <p style="font-size: 0.9rem; color: var(--gray-600);">1950s style promotional graphics</p>
                        <div class="generation-info">
                            <span>Midjourney Optimized</span>
                            <div class="ai-badge">AI Generated</div>
                        </div>
                        <div class="gallery-prompt">vintage poster design, 1950s aesthetic, bold typography, retro colors, advertising style, high contrast, vector art</div>
                    </div>
                </div>

                <div class="gallery-item" onclick="showPromptDetails(this)" data-style="classical portrait">
                    <div class="gallery-image" style="background-image: url('https://images.unsplash.com/photo-1541961017774-22349e4a1262?w=400&h=200&fit=crop');">
                        <div class="image-overlay">
                            <div class="overlay-content">
                                <div style="font-size: 1rem; margin-bottom: 0.5rem;">üéØ Click to View Prompt</div>
                                <div style="font-size: 0.8rem; opacity: 0.9;">Classical art style</div>
                            </div>
                        </div>
                    </div>
                    <div class="gallery-content">
                        <h3>Classical Portrait</h3>
                        <p style="font-size: 0.9rem; color: var(--gray-600);">Renaissance-inspired artwork</p>
                        <div class="generation-info">
                            <span>DALL-E 3 Optimized</span>
                            <div class="ai-badge">AI Generated</div>
                        </div>
                        <div class="gallery-prompt">oil painting, classical portrait, Renaissance style, rich colors, detailed brushwork, museum quality, masterpiece</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Advanced Prompt Builder -->
        <div class="tab-content" id="prompt-builder">
            <div style="background: rgba(255, 255, 255, 0.95); backdrop-filter: blur(20px); border-radius: 20px; padding: 2rem; box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1); border: 2px solid var(--silver-light);">
                <h2 style="color: var(--cobalt-blue); text-align: center; margin-bottom: 2rem;">‚ö° Advanced Prompt Builder</h2>
                
                <div class="prompt-elements">
                    <div class="element-category">
                        <h4>üé® Art Styles</h4>
                        <div class="element-tag" onclick="addBuilderElement('photorealistic')">Photorealistic</div>
                        <div class="element-tag" onclick="addBuilderElement('digital art')">Digital Art</div>
                        <div class="element-tag" onclick="addBuilderElement('oil painting')">Oil Painting</div>
                        <div class="element-tag" onclick="addBuilderElement('watercolor')">Watercolor</div>
                        <div class="element-tag" onclick="addBuilderElement('anime style')">Anime</div>
                        <div class="element-tag" onclick="addBuilderElement('pixel art')">Pixel Art</div>
                    </div>

                    <div class="element-category">
                        <h4>üí° Lighting</h4>
                        <div class="element-tag" onclick="addBuilderElement('golden hour lighting')">Golden Hour</div>
                        <div class="element-tag" onclick="addBuilderElement('studio lighting')">Studio</div>
                        <div class="element-tag" onclick="addBuilderElement('dramatic lighting')">Dramatic</div>
                        <div class="element-tag" onclick="addBuilderElement('soft lighting')">Soft</div>
                        <div class="element-tag" onclick="addBuilderElement('neon lighting')">Neon</div>
                        <div class="element-tag" onclick="addBuilderElement('natural lighting')">Natural</div>
                    </div>

                    <div class="element-category">
                        <h4>üìê Composition</h4>
                        <div class="element-tag" onclick="addBuilderElement('close-up')">Close-up</div>
                        <div class="element-tag" onclick="addBuilderElement('wide shot')">Wide Shot</div>
                        <div class="element-tag" onclick="addBuilderElement('bird\\'s eye view')">Bird's Eye</div>
                        <div class="element-tag" onclick="addBuilderElement('low angle')">Low Angle</div>
                        <div class="element-tag" onclick="addBuilderElement('symmetrical')">Symmetrical</div>
                        <div class="element-tag" onclick="addBuilderElement('rule of thirds')">Rule of Thirds</div>
                    </div>

                    <div class="element-category">
                        <h4>üé≠ Mood</h4>
                        <div class="element-tag" onclick="addBuilderElement('serene')">Serene</div>
                        <div class="element-tag" onclick="addBuilderElement('dramatic')">Dramatic</div>
                        <div class="element-tag" onclick="addBuilderElement('mysterious')">Mysterious</div>
                        <div class="element-tag" onclick="addBuilderElement('cheerful')">Cheerful</div>
                        <div class="element-tag" onclick="addBuilderElement('melancholic')">Melancholic</div>
                        <div class="element-tag" onclick="addBuilderElement('energetic')">Energetic</div>
                    </div>
                </div>

                <div style="margin-top: 2rem;">
                    <label style="font-weight: 600; margin-bottom: 0.5rem; display: block;">üî® Built Prompt</label>
                    <textarea id="builder-prompt" style="width: 100%; border: 2px solid var(--silver-light); border-radius: 10px; padding: 1rem; font-size: 1rem; min-height: 120px; background: var(--white);" placeholder="Your custom prompt will be built here as you select elements..."></textarea>
                    
                    <div style="display: flex; gap: 1rem; margin-top: 1rem; flex-wrap: wrap;">
                        <button onclick="analyzeBuilderPrompt()" style="background: linear-gradient(135deg, var(--cobalt-blue), var(--cobalt-light)); color: var(--white); border: none; padding: 0.75rem 1.5rem; border-radius: 10px; font-weight: 600; cursor: pointer;">ü§ñ Analyze</button>
                        <button onclick="clearBuilderPrompt()" style="background: var(--silver); color: var(--gray-700); border: none; padding: 0.75rem 1.5rem; border-radius: 10px; font-weight: 600; cursor: pointer;">üóëÔ∏è Clear</button>
                        <button onclick="saveBuilderPrompt()" style="background: var(--success); color: var(--white); border: none; padding: 0.75rem 1.5rem; border-radius: 10px; font-weight: 600; cursor: pointer;">üíæ Save</button>
                        <button onclick="copyBuilderPrompt()" style="background: var(--warning); color: var(--white); border: none; padding: 0.75rem 1.5rem; border-radius: 10px; font-weight: 600; cursor: pointer;">üìã Copy</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Enhanced Tool Comparison -->
        <div class="tab-content" id="tool-comparison">
            <div style="background: rgba(255, 255, 255, 0.95); backdrop-filter: blur(20px); border-radius: 20px; padding: 2rem; box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1); border: 2px solid var(--silver-light);">
                <h2 style="color: var(--cobalt-blue); text-align: center; margin-bottom: 2rem;">üõ†Ô∏è AI Image Generation Tool Comparison</h2>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem;">
                    <div style="background: linear-gradient(135deg, var(--cobalt-blue), var(--cobalt-light)); color: var(--white); padding: 2rem; border-radius: 15px; transition: transform 0.3s ease;" onmouseover="this.style.transform='scale(1.05)'" onmouseout="this.style.transform='scale(1)'">
                        <h3>DALL-E 3</h3>
                        <p style="margin: 1rem 0; opacity: 0.9;">Best for precise prompt following and text integration</p>
                        <ul style="font-size: 0.9rem; opacity: 0.8; margin-bottom: 1.5rem;">
                            <li>‚úÖ Excellent text rendering</li>
                            <li>‚úÖ Precise prompt following</li>
                            <li>‚úÖ Simple interface</li>
                            <li>‚úÖ Commercial use allowed</li>
                        </ul>
                        <div style="background: rgba(255,255,255,0.2); padding: 0.75rem; border-radius: 8px; font-size: 0.85rem;">
                            <strong>Best for:</strong> Marketing materials, logos, precise compositions
                        </div>
                    </div>

                    <div style="background: linear-gradient(135deg, var(--success), #059669); color: var(--white); padding: 2rem; border-radius: 15px; transition: transform 0.3s ease;" onmouseover="this.style.transform='scale(1.05)'" onmouseout="this.style.transform='scale(1)'">
                        <h3>Midjourney</h3>
                        <p style="margin: 1rem 0; opacity: 0.9;">Superior artistic quality and creative interpretation</p>
                        <ul style="font-size: 0.9rem; opacity: 0.8; margin-bottom: 1.5rem;">
                            <li>‚úÖ Outstanding image quality</li>
                            <li>‚úÖ Artistic styles</li>
                            <li>‚úÖ Creative interpretation</li>
                            <li>‚úÖ Active community</li>
                        </ul>
                        <div style="background: rgba(255,255,255,0.2); padding: 0.75rem; border-radius: 8px; font-size: 0.85rem;">
                            <strong>Best for:</strong> Art, concept designs, creative projects
                        </div>
                    </div>

                    <div style="background: linear-gradient(135deg, var(--warning), #d97706); color: var(--white); padding: 2rem; border-radius: 15px; transition: transform 0.3s ease;" onmouseover="this.style.transform='scale(1.05)'" onmouseout="this.style.transform='scale(1)'">
                        <h3>Stable Diffusion</h3>
                        <p style="margin: 1rem 0; opacity: 0.9;">Complete control and customization options</p>
                        <ul style="font-size: 0.9rem; opacity: 0.8; margin-bottom: 1.5rem;">
                            <li>‚úÖ Full customization</li>
                            <li>‚úÖ Free and open source</li>
                            <li>‚úÖ Local generation</li>
                            <li>‚úÖ Extensive models</li>
                        </ul>
                        <div style="background: rgba(255,255,255,0.2); padding: 0.75rem; border-radius: 8px; font-size: 0.85rem;">
                            <strong>Best for:</strong> Developers, custom models, batch processing
                        </div>
                    </div>
                </div>

                <div style="margin-top: 3rem; background: var(--gray-50); border-radius: 15px; padding: 2rem; border: 2px solid var(--silver-light);">
                    <h3 style="color: var(--cobalt-blue); margin-bottom: 1.5rem; text-align: center;">üìä Quick Comparison Matrix</h3>
                    <div style="overflow-x: auto;">
                        <table style="width: 100%; border-collapse: collapse;">
                            <thead>
                                <tr style="background: var(--cobalt-blue); color: var(--white);">
                                    <th style="padding: 1rem; text-align: left;">Feature</th>
                                    <th style="padding: 1rem; text-align: center;">DALL-E 3</th>
                                    <th style="padding: 1rem; text-align: center;">Midjourney</th>
                                    <th style="padding: 1rem; text-align: center;">Stable Diffusion</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr style="border-bottom: 1px solid var(--silver);">
                                    <td style="padding: 0.75rem; font-weight: 600;">Ease of Use</td>
                                    <td style="padding: 0.75rem; text-align: center;">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</td>
                                    <td style="padding: 0.75rem; text-align: center;">‚≠ê‚≠ê‚≠ê‚≠ê</td>
                                    <td style="padding: 0.75rem; text-align: center;">‚≠ê‚≠ê</td>
                                </tr>
                                <tr style="border-bottom: 1px solid var(--silver);">
                                    <td style="padding: 0.75rem; font-weight: 600;">Image Quality</td>
                                    <td style="padding: 0.75rem; text-align: center;">‚≠ê‚≠ê‚≠ê‚≠ê</td>
                                    <td style="padding: 0.75rem; text-align: center;">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</td>
                                    <td style="padding: 0.75rem; text-align: center;">‚≠ê‚≠ê‚≠ê‚≠ê</td>
                                </tr>
                                <tr style="border-bottom: 1px solid var(--silver);">
                                    <td style="padding: 0.75rem; font-weight: 600;">Customization</td>
                                    <td style="padding: 0.75rem; text-align: center;">‚≠ê‚≠ê</td>
                                    <td style="padding: 0.75rem; text-align: center;">‚≠ê‚≠ê‚≠ê</td>
                                    <td style="padding: 0.75rem; text-align: center;">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</td>
                                </tr>
                                <tr>
                                    <td style="padding: 0.75rem; font-weight: 600;">Cost</td>
                                    <td style="padding: 0.75rem; text-align: center;">$</td>
                                    <td style="padding: 0.75rem; text-align: center;">$</td>
                                    <td style="padding: 0.75rem; text-align: center;">Free</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Enhanced Workflows -->
        <div class="tab-content" id="workflows">
            <div style="background: rgba(255, 255, 255, 0.95); backdrop-filter: blur(20px); border-radius: 20px; padding: 2rem; box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1); border: 2px solid var(--silver-light);">
                <h2 style="color: var(--cobalt-blue); text-align: center; margin-bottom: 2rem;">üîÑ Professional AI Visual Workflows</h2>
                
                <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(350px, 1fr)); gap: 2rem;">
                    <div style="background: linear-gradient(135deg, var(--cobalt-blue), var(--cobalt-light)); color: var(--white); padding: 2rem; border-radius: 15px; transition: transform 0.3s ease;" onmouseover="this.style.transform='translateY(-5px)'" onmouseout="this.style.transform='translateY(0)'">
                        <h3>üì± Social Media Content</h3>
                        <div style="margin-top: 1rem; font-size: 0.9rem; line-height: 1.8;">
                            <strong>1.</strong> Generate base image with AI<br>
                            <strong>2.</strong> Edit in Canva/Figma<br>
                            <strong>3.</strong> Add brand elements<br>
                            <strong>4.</strong> Optimize for platform<br>
                            <strong>5.</strong> A/B test variations
                        </div>
                        <div style="margin-top: 1.5rem; background: rgba(255,255,255,0.2); padding: 1rem; border-radius: 8px;">
                            <strong>Pro Tip:</strong> Create templates in Figma with AI-generated backgrounds for consistent branding.
                        </div>
                    </div>

                    <div style="background: linear-gradient(135deg, var(--success), #059669); color: var(--white); padding: 2rem; border-radius: 15px; transition: transform 0.3s ease;" onmouseover="this.style.transform='translateY(-5px)'" onmouseout="this.style.transform='translateY(0)'">
                        <h3>üõçÔ∏è E-commerce Products</h3>
                        <div style="margin-top: 1rem; font-size: 0.9rem; line-height: 1.8;">
                            <strong>1.</strong> Create product mockups<br>
                            <strong>2.</strong> Generate lifestyle scenes<br>
                            <strong>3.</strong> Consistent lighting/style<br>
                            <strong>4.</strong> Background variations<br>
                            <strong>5.</strong> Optimize for web
                        </div>
                        <div style="margin-top: 1.5rem; background: rgba(255,255,255,0.2); padding: 1rem; border-radius: 8px;">
                            <strong>Pro Tip:</strong> Use DALL-E 3 for precise product placement and consistent lighting across all variants.
                        </div>
                    </div>

                    <div style="background: linear-gradient(135deg, var(--warning), #d97706); color: var(--white); padding: 2rem; border-radius: 15px; transition: transform 0.3s ease;" onmouseover="this.style.transform='translateY(-5px)'" onmouseout="this.style.transform='translateY(0)'">
                        <h3>üì∞ Editorial Content</h3>
                        <div style="margin-top: 1rem; font-size: 0.9rem; line-height: 1.8;">
                            <strong>1.</strong> Concept visualization<br>
                            <strong>2.</strong> Copyright-safe creation<br>
                            <strong>3.</strong> Editorial style matching<br>
                            <strong>4.</strong> Fact-checking imagery<br>
                            <strong>5.</strong> Attribution documentation
                        </div>
                        <div style="margin-top: 1.5rem; background: rgba(255,255,255,0.2); padding: 1rem; border-radius: 8px;">
                            <strong>Pro
