name: MikeGuides Utilities

on:
  workflow_dispatch:
    inputs:
      task:
        description: "Choose a task"
        required: true
        type: choice
        default: "Just log success"
        options:
          - "Just log success"
          - "Trigger Netlify build hook"
          - "Purge Netlify cache and redeploy"
          - "Bust image cache (purge CDN)"
      confirm:
        description: "Check to confirm you really want to run this task"
        required: true
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  run-task:
    runs-on: ubuntu-latest
    steps:
      - name: Show selection & enforce checkbox
        run: |
          echo "Selected task: '${{ github.event.inputs.task }}'"
          echo "Confirm checked: '${{ github.event.inputs.confirm }}'"
          if [ "${{ github.event.inputs.confirm }}" != "true" ]; then
            echo "‚ùå Confirmation checkbox not checked. Exiting."
            exit 1
          fi

      # --- Option 1: No-op (always safe) ---
      - name: No-op
        if: ${{ github.event.inputs.task == 'Just log success' }}
        run: echo "‚úÖ Done."

      # --- Option 2: Trigger normal Netlify build hook ---
      - name: Trigger Netlify build hook
        if: ${{ github.event.inputs.task == 'Trigger Netlify build hook' }}
        env:
          NETLIFY_BUILD_HOOK: ${{ secrets.NETLIFY_BUILD_HOOK }}
        run: |
          if [ -z "$NETLIFY_BUILD_HOOK" ]; then
            echo "‚ùå NETLIFY_BUILD_HOOK not set."
            exit 1
          fi
          echo "‚ñ∂Ô∏è Calling Netlify build hook‚Ä¶"
          curl -fsS -X POST -H "Content-Length: 0" "$NETLIFY_BUILD_HOOK"
          echo "‚úÖ Netlify build triggered."

      # --- Option 3: Clear cache AND deploy (build hook with clear_cache=true) ---
      - name: Purge Netlify cache and redeploy
        if: ${{ github.event.inputs.task == 'Purge Netlify cache and redeploy' }}
        env:
          NETLIFY_BUILD_HOOK: ${{ secrets.NETLIFY_BUILD_HOOK }}
        run: |
          if [ -z "$NETLIFY_BUILD_HOOK" ]; then
            echo "‚ùå NETLIFY_BUILD_HOOK not set."
            exit 1
          fi
          echo "üßπ Clearing Netlify build cache + deploying‚Ä¶"
          curl -fsS -X POST -H "Content-Length: 0" "${NETLIFY_BUILD_HOOK}?clear_cache=true"
          echo "‚úÖ Clear cache + deploy requested."

      # --- Option 4: Purge CDN cache for the whole site ---
      - name: Bust image cache (purge CDN)
        if: ${{ github.event.inputs.task == 'Bust image cache (purge CDN)' }}
        env:
          NETLIFY_API_TOKEN: ${{ secrets.NETLIFY_API_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          if [ -z "$NETLIFY_API_TOKEN" ] || [ -z "$NETLIFY_SITE_ID" ]; then
            echo "‚ùå NETLIFY_API_TOKEN or NETLIFY_SITE_ID not set."
            exit 1
          fi
          echo "üß® Purging Netlify CDN cache for site $NETLIFY_SITE_ID ‚Ä¶"
          curl -fsS -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${NETLIFY_API_TOKEN}" \
            --data "{\"site_id\":\"${NETLIFY_SITE_ID}\"}" \
            "https://api.netlify.com/api/v1/purge"
          echo "‚úÖ CDN cache purge requested."
